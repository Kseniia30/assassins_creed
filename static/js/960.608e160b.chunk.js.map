{"version":3,"file":"static/js/960.608e160b.chunk.js","mappings":"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","sources":["data/films.js","components/Films/Films.styled.js","components/Films/FilmsModal/FilmsModal.styled.js","components/Films/FilmsModal/FilmsModal.js","components/Films/Films.js"],"sourcesContent":["import axios from 'axios';\n\nconst key = '7cdf478795ad4657f8647bebd5408f4d';\nconst query = 'assassin%27s%20creed';\n\nexport const fetchAssassinCreedAll = () => {\n    return axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${key}&language=en-US&page=1&include_adult=false`\n    );\n};\n\nexport const fetchMovieById = id => {\n    return axios.get(\n        `https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`\n    );\n};\n\nexport const fetchMovieTrailer = id => {\n    return axios.get(\n        `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${key}&language=en-US`\n    );\n};\n\nexport const getGenres = () => {\n    return axios.get(\n        `https://api.themoviedb.org/3/genre/movie/list?api_key=${key}&language=en-US`\n    );\n};\n","import styled from 'styled-components';\n\nexport const FilmList = styled.ul`\n    margin-top: 20px;\n    margin-bottom: 20px;\n    text-align: center;\n\n    @media screen and (min-width: 768px) {\n        display: flex;\n        flex-wrap: wrap;\n        margin-top: -20px;\n        margin-right: -20px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        margin-top: -30px;\n        margin-right: -30px;\n    }\n`;\n\nexport const FilmItem = styled.li`\n    :not(:last-child) {\n        margin-bottom: 15px;\n    }\n\n    @media screen and (min-width: 768px) {\n        :not(:last-child) {\n            margin-bottom: 0;\n        }\n\n        margin-top: 20px;\n        margin-right: 20px;\n        width: calc(100% / 2 - 20px);\n    }\n`;\n\nexport const FilmImg = styled.img`\n    width: 280px;\n    margin-bottom: 10px;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 10px;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 15px;\n        width: 350px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 400px;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const FilmModalInfoBox = styled.div`\n    text-align: center;\n\n    @media screen and (min-width: 768px) {\n        text-align: left;\n        display: flex;\n        margin-top: 30px;\n    }\n`;\n\nexport const Poster = styled.img`\n    border-radius: 10px;\n    width: 150px;\n    height: max-content;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 15px;\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 0;\n        margin-right: 30px;\n        width: 220px;\n        margin-top: 20px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        width: 240px;\n        margin-right: 40px;\n        margin-top: 0;\n    }\n`;\n\nexport const FilmOverview = styled.p`\n    text-align: justify;\n    text-indent: 10px;\n    margin-bottom: 15px;\n`;\n\nexport const GenresList = styled.ul`\n    list-style-type: disclosure-closed;\n    margin-bottom: 15px;\n    text-align: left;\n`;\n","import nextId from 'react-id-generator';\nimport {\n    FilmModalInfoBox,\n    FilmOverview,\n    GenresList,\n    Poster,\n} from './FilmsModal.styled';\nimport PropTypes from 'prop-types';\nconst posterStartPath = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n\nexport const FilmsModal = ({\n    poster,\n    id,\n    title,\n    time,\n    release,\n    overview,\n    genres,\n}) => {\n    return (\n        <FilmModalInfoBox>\n            <Poster\n                src={\n                    !poster && id === 1070635\n                        ? `${posterStartPath}/ioluTkffQBrv5IUk9b0vPll1hKe.jpg`\n                        : `${posterStartPath}${poster}`\n                }\n                alt={title}\n            />\n            <div>\n                <h2>{title}</h2>\n                <p>\n                    Release date:{' '}\n                    {!poster && id === 1070635 ? '2011' : release.slice(0, 4)}\n                </p>\n                <p>Runtime: {!poster && id === 1070635 ? '36' : time} min</p>\n                <FilmOverview>\n                    <b>Overview:</b>{' '}\n                    {!poster && id === 1070635\n                        ? \"When the Duke of Milan is brutally murdered, the Assassin Giovanni Auditore is dispatched to investigate. What he uncovers implicates Italy's most powerful families reaching all the way back to the Vatican itself. As Giovanni draws closer to the truth, he becomes hunted himself. He must expose the conspirators before he joins their ever-growing list of victims.\"\n                        : overview}\n                </FilmOverview>\n                {genres.length !== 0 && <p>Genres:</p>}\n                <GenresList>\n                    {genres.map(genre => {\n                        return <li key={nextId()}>{genre.name}</li>;\n                    })}\n                </GenresList>\n            </div>\n        </FilmModalInfoBox>\n    );\n};\n\nFilmsModal.propTypes = {\n    poster: PropTypes.string,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    time: PropTypes.number,\n    release: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n};\n","import { Modal } from 'components/Backdrop/Backdrop';\nimport {\n    fetchAssassinCreedAll,\n    fetchMovieById,\n    fetchMovieTrailer,\n} from 'data/films';\nimport { useEffect, useState } from 'react';\nimport { FilmImg, FilmItem, FilmList } from './Films.styled';\nimport { FilmsModal } from './FilmsModal/FilmsModal';\n\nconst { Container } = require('components/Common/styled/Common.styled');\n\nconst posterStartPath = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2';\n\nconst Films = () => {\n    const [filmList, setFilmList] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [movie, setMovie] = useState(null);\n    const [trailer, setTrailer] = useState(null);\n\n    useEffect(() => {\n        fetchAssassinCreedAll().then(res => {\n            setFilmList(res.data.results);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (showModal) {\n            document.querySelector('body').style.overflow = 'hidden';\n        }\n        if (!showModal) {\n            document.querySelector('body').style.overflow = 'scroll';\n        }\n    }, [showModal]);\n\n    if (!filmList) {\n        return;\n    }\n\n    const toggleModal = evt => {\n        setShowModal(!showModal);\n    };\n\n    const openBackdrop = async evt => {\n        toggleModal();\n        const id = evt.currentTarget.dataset.id;\n        await fetchMovieById(id).then(res => setMovie(res));\n        await fetchMovieTrailer(id).then(res => {\n            setTrailer(res.data.results[0]);\n        });\n    };\n    return (\n        <Container>\n            <div style={{ paddingTop: '10px' }}>\n                <FilmList>\n                    {filmList.map(film => {\n                        const {\n                            id,\n                            original_title,\n                            poster_path,\n                            release_date,\n                        } = film;\n                        return (\n                            <FilmItem\n                                key={id}\n                                data-id={id}\n                                onClick={openBackdrop}\n                            >\n                                <FilmImg\n                                    src={`${posterStartPath}${poster_path}`}\n                                    alt={original_title}\n                                />\n                                <h2>{original_title}</h2>\n                                <p>{release_date.slice(0, 4)}</p>\n                            </FilmItem>\n                        );\n                    })}\n                </FilmList>\n                {showModal && movie && (\n                    <Modal onClose={toggleModal}>\n                        <div>\n                            <FilmsModal\n                                poster={movie.data.poster_path}\n                                id={movie.data.id}\n                                title={movie.data.original_title}\n                                time={movie.data.runtime}\n                                release={movie.data.release_date}\n                                overview={movie.data.overview}\n                                genres={movie.data.genres}\n                            />\n                            {trailer && (\n                                <iframe\n                                    className=\"filmVideo\"\n                                    src={`https://www.youtube.com/embed/${trailer.key}`}\n                                    title={trailer.name}\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                                    allowFullScreen\n                                ></iframe>\n                            )}\n                            {!trailer && movie.data.id === 57051 && (\n                                <iframe\n                                    className=\"filmVideo\"\n                                    src=\"https://www.youtube.com/embed/dpfi25P2mVo\"\n                                    title=\"Assassin's Creed Ascendance - Trailer\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                                    allowFullScreen\n                                ></iframe>\n                            )}\n                            {!trailer && movie.data.id === 79089 && (\n                                <iframe\n                                    className=\"filmVideo\"\n                                    src=\"https://www.youtube.com/embed/cv3OabBh2cY\"\n                                    title=\"Assassin's Creed Revelations: Embers | Trailer | Ubisoft [NA]\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                                    allowFullScreen\n                                ></iframe>\n                            )}\n                            {!trailer && movie.data.id === 1070635 && (\n                                <iframe\n                                    className=\"filmVideo\"\n                                    src=\"https://www.youtube.com/embed/QWXgtwHy8Ss\"\n                                    title=\"Assassin's Creed Lineage trailer\"\n                                    frameBorder=\"0\"\n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                                    allowFullScreen\n                                ></iframe>\n                            )}\n                        </div>\n                    </Modal>\n                )}\n            </div>\n        </Container>\n    );\n};\n\nexport default Films;\n"],"names":["key","fetchMovieById","id","axios","fetchMovieTrailer","FilmList","styled","FilmItem","FilmImg","FilmModalInfoBox","Poster","FilmOverview","GenresList","posterStartPath","FilmsModal","poster","title","time","release","overview","genres","src","alt","slice","length","map","genre","name","nextId","Container","require","useState","filmList","setFilmList","showModal","setShowModal","movie","setMovie","trailer","setTrailer","useEffect","then","res","data","results","document","querySelector","style","overflow","toggleModal","evt","openBackdrop","currentTarget","dataset","paddingTop","film","original_title","poster_path","release_date","onClick","onClose","runtime","className","frameBorder","allow","allowFullScreen"],"sourceRoot":""}